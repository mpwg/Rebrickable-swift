//
// UsersAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class UsersAPI {

    /**
     Get a list of all the Parts in all the user's Part Lists as well as the Parts inside Sets in the user's Set Lists.
     
     - parameter userToken: (path)  
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter partNum: (query)  (optional)
     - parameter partCatId: (query)  (optional)
     - parameter colorId: (query)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersAllpartsList(userToken: String, page: Int? = nil, pageSize: Int? = nil, partNum: String? = nil, partCatId: Double? = nil, colorId: Double? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersAllpartsListWithRequestBuilder(userToken: userToken, page: page, pageSize: pageSize, partNum: partNum, partCatId: partCatId, colorId: colorId, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get a list of all the Parts in all the user's Part Lists as well as the Parts inside Sets in the user's Set Lists.
     - GET /api/v3/users/{user_token}/allparts/
     - Get a list of all the Parts in all the user's Part Lists as well as the Parts inside Sets in the user's Set Lists.  ###WARNING this call is very resource intensive, do not overuse it!  Optionally, filter by one or more of the below query parameters.
     - parameter userToken: (path)  
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter partNum: (query)  (optional)
     - parameter partCatId: (query)  (optional)
     - parameter colorId: (query)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersAllpartsListWithRequestBuilder(userToken: String, page: Int? = nil, pageSize: Int? = nil, partNum: String? = nil, partCatId: Double? = nil, colorId: Double? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/allparts/"
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": (wrappedValue: page?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "page_size": (wrappedValue: pageSize?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "part_num": (wrappedValue: partNum?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "part_cat_id": (wrappedValue: partCatId?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "color_id": (wrappedValue: colorId?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get a list of all the available Badges
     
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersBadgesList(page: Int? = nil, pageSize: Int? = nil, ordering: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersBadgesListWithRequestBuilder(page: page, pageSize: pageSize, ordering: ordering, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get a list of all the available Badges
     - GET /api/v3/users/badges/
     - Get a list of all the available Badges
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersBadgesListWithRequestBuilder(page: Int? = nil, pageSize: Int? = nil, ordering: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        let localVariablePath = "/api/v3/users/badges/"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": (wrappedValue: page?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "page_size": (wrappedValue: pageSize?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "ordering": (wrappedValue: ordering?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get details about a specific Badge
     
     - parameter id: (path) A unique integer value identifying this badge. 
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersBadgesRead(id: Int, ordering: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersBadgesReadWithRequestBuilder(id: id, ordering: ordering, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get details about a specific Badge
     - GET /api/v3/users/badges/{id}/
     - Get details about a specific Badge
     - parameter id: (path) A unique integer value identifying this badge. 
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersBadgesReadWithRequestBuilder(id: Int, ordering: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/badges/{id}/"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "ordering": (wrappedValue: ordering?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Find out how many parts the user needs to build the specified Set.
     
     - parameter setNum: (path)  
     - parameter userToken: (path)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersBuildRead(setNum: String, userToken: String, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersBuildReadWithRequestBuilder(setNum: setNum, userToken: userToken, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Find out how many parts the user needs to build the specified Set.
     - GET /api/v3/users/{user_token}/build/{set_num}/
     - Find out how many parts the user needs to build the specified Set.  The user's default Build Settings will be used to calculate a Build Match % using their LEGO Collection of Sets and Parts.
     - parameter setNum: (path)  
     - parameter userToken: (path)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersBuildReadWithRequestBuilder(setNum: String, userToken: String, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/build/{set_num}/"
        let setNumPreEscape = "\(APIHelper.mapValueToPathItem(setNum))"
        let setNumPostEscape = setNumPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{set_num}", with: setNumPostEscape, options: .literal, range: nil)
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Add one or more Lost Parts to the user.
     
     - parameter userToken: (path)  
     - parameter invPartId: (form)  
     - parameter lostQuantity: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersLostPartsCreate(userToken: String, invPartId: Int, lostQuantity: Int? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersLostPartsCreateWithRequestBuilder(userToken: userToken, invPartId: invPartId, lostQuantity: lostQuantity, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Add one or more Lost Parts to the user.
     - POST /api/v3/users/{user_token}/lost_parts/
     - Add one or more Lost Parts to the user.  ### Single Part When adding a single Part, returns the successfully created Part (status 201) or details for why the Part could not be added. ### Multiple Parts To add multiple Parts, POST a JSON list of them (using a Content-Type header of 'application/json'). The inv_part_id field can be retrieved from the Set's inventory. e.g: `[{\"inv_part_id\": 806698, \"lost_quantity\": 3},   {\"inv_part_id\": 256007, \"lost_quantity\": 2}]` Returns a list of successfully added Parts. If the Part already exists or is unrecognised, it will be skipped.
     - parameter userToken: (path)  
     - parameter invPartId: (form)  
     - parameter lostQuantity: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersLostPartsCreateWithRequestBuilder(userToken: String, invPartId: Int, lostQuantity: Int? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/lost_parts/"
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableFormParams: [String: (any Sendable)?] = [
            "lost_quantity": lostQuantity?.asParameter(codableHelper: apiConfiguration.codableHelper),
            "inv_part_id": invPartId.asParameter(codableHelper: apiConfiguration.codableHelper),
        ]

        let localVariableNonNullParameters = APIHelper.rejectNil(localVariableFormParams)
        let localVariableParameters = APIHelper.convertBoolToString(localVariableNonNullParameters)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/x-www-form-urlencoded",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Remove the Lost Part from the user.
     
     - parameter id: (path)  
     - parameter userToken: (path)  
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersLostPartsDelete(id: String, userToken: String, ordering: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersLostPartsDeleteWithRequestBuilder(id: id, userToken: userToken, ordering: ordering, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Remove the Lost Part from the user.
     - DELETE /api/v3/users/{user_token}/lost_parts/{id}/
     - Remove the Lost Part from the user.
     - parameter id: (path)  
     - parameter userToken: (path)  
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersLostPartsDeleteWithRequestBuilder(id: String, userToken: String, ordering: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/lost_parts/{id}/"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "ordering": (wrappedValue: ordering?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get a list of all the Lost Parts from the user's LEGO collection.
     
     - parameter userToken: (path)  
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersLostPartsList(userToken: String, page: Int? = nil, pageSize: Int? = nil, ordering: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersLostPartsListWithRequestBuilder(userToken: userToken, page: page, pageSize: pageSize, ordering: ordering, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get a list of all the Lost Parts from the user's LEGO collection.
     - GET /api/v3/users/{user_token}/lost_parts/
     - Get a list of all the Lost Parts from the user's LEGO collection.  Optionally, filter by one or more of the below query parameters.
     - parameter userToken: (path)  
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersLostPartsListWithRequestBuilder(userToken: String, page: Int? = nil, pageSize: Int? = nil, ordering: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/lost_parts/"
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": (wrappedValue: page?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "page_size": (wrappedValue: pageSize?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "ordering": (wrappedValue: ordering?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get a list of all the Minifigs in all the user's Sets. Note that this is a read-only list as Minifigs are
     
     - parameter userToken: (path)  
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter figSetNum: (query)  (optional)
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter search: (query) A search term. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersMinifigsList(userToken: String, page: Int? = nil, pageSize: Int? = nil, figSetNum: String? = nil, ordering: String? = nil, search: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersMinifigsListWithRequestBuilder(userToken: userToken, page: page, pageSize: pageSize, figSetNum: figSetNum, ordering: ordering, search: search, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get a list of all the Minifigs in all the user's Sets. Note that this is a read-only list as Minifigs are
     - GET /api/v3/users/{user_token}/minifigs/
     - Get a list of all the Minifigs in all the user's Sets. Note that this is a read-only list as Minifigs are automatically determined by the Sets in the user's Set Lists.  Minifigs that were manually added to Set Lists can be retrieved via the GET /api/v3/users/{user_token}/sets/ endpoint.  Optionally, filter by one or more of the below query parameters.
     - parameter userToken: (path)  
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter figSetNum: (query)  (optional)
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter search: (query) A search term. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersMinifigsListWithRequestBuilder(userToken: String, page: Int? = nil, pageSize: Int? = nil, figSetNum: String? = nil, ordering: String? = nil, search: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/minifigs/"
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": (wrappedValue: page?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "page_size": (wrappedValue: pageSize?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "fig_set_num": (wrappedValue: figSetNum?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "ordering": (wrappedValue: ordering?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "search": (wrappedValue: search?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Add a new Part List.
     
     - parameter userToken: (path)  
     - parameter name: (form)  
     - parameter isBuildable: (form)  (optional)
     - parameter numParts: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersPartlistsCreate(userToken: String, name: String, isBuildable: Bool? = nil, numParts: Int? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersPartlistsCreateWithRequestBuilder(userToken: userToken, name: name, isBuildable: isBuildable, numParts: numParts, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Add a new Part List.
     - POST /api/v3/users/{user_token}/partlists/
     - Add a new Part List.
     - parameter userToken: (path)  
     - parameter name: (form)  
     - parameter isBuildable: (form)  (optional)
     - parameter numParts: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersPartlistsCreateWithRequestBuilder(userToken: String, name: String, isBuildable: Bool? = nil, numParts: Int? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/partlists/"
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableFormParams: [String: (any Sendable)?] = [
            "is_buildable": isBuildable?.asParameter(codableHelper: apiConfiguration.codableHelper),
            "name": name.asParameter(codableHelper: apiConfiguration.codableHelper),
            "num_parts": numParts?.asParameter(codableHelper: apiConfiguration.codableHelper),
        ]

        let localVariableNonNullParameters = APIHelper.rejectNil(localVariableFormParams)
        let localVariableParameters = APIHelper.convertBoolToString(localVariableNonNullParameters)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/x-www-form-urlencoded",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Delete a Part List and all it's Parts.
     
     - parameter listId: (path)  
     - parameter userToken: (path)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersPartlistsDelete(listId: String, userToken: String, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersPartlistsDeleteWithRequestBuilder(listId: listId, userToken: userToken, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Delete a Part List and all it's Parts.
     - DELETE /api/v3/users/{user_token}/partlists/{list_id}/
     - Delete a Part List and all it's Parts.
     - parameter listId: (path)  
     - parameter userToken: (path)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersPartlistsDeleteWithRequestBuilder(listId: String, userToken: String, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/partlists/{list_id}/"
        let listIdPreEscape = "\(APIHelper.mapValueToPathItem(listId))"
        let listIdPostEscape = listIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{list_id}", with: listIdPostEscape, options: .literal, range: nil)
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get a list of all the user's Part Lists.
     
     - parameter userToken: (path)  
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersPartlistsList(userToken: String, page: Int? = nil, pageSize: Int? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersPartlistsListWithRequestBuilder(userToken: userToken, page: page, pageSize: pageSize, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get a list of all the user's Part Lists.
     - GET /api/v3/users/{user_token}/partlists/
     - Get a list of all the user's Part Lists.
     - parameter userToken: (path)  
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersPartlistsListWithRequestBuilder(userToken: String, page: Int? = nil, pageSize: Int? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/partlists/"
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": (wrappedValue: page?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "page_size": (wrappedValue: pageSize?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Update an existing Part List's details.
     
     - parameter listId: (path)  
     - parameter userToken: (path)  
     - parameter isBuildable: (form)  (optional)
     - parameter name: (form)  (optional)
     - parameter numParts: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersPartlistsPartialUpdate(listId: String, userToken: String, isBuildable: Bool? = nil, name: String? = nil, numParts: Int? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersPartlistsPartialUpdateWithRequestBuilder(listId: listId, userToken: userToken, isBuildable: isBuildable, name: name, numParts: numParts, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Update an existing Part List's details.
     - PATCH /api/v3/users/{user_token}/partlists/{list_id}/
     - Update an existing Part List's details.
     - parameter listId: (path)  
     - parameter userToken: (path)  
     - parameter isBuildable: (form)  (optional)
     - parameter name: (form)  (optional)
     - parameter numParts: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersPartlistsPartialUpdateWithRequestBuilder(listId: String, userToken: String, isBuildable: Bool? = nil, name: String? = nil, numParts: Int? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/partlists/{list_id}/"
        let listIdPreEscape = "\(APIHelper.mapValueToPathItem(listId))"
        let listIdPostEscape = listIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{list_id}", with: listIdPostEscape, options: .literal, range: nil)
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableFormParams: [String: (any Sendable)?] = [
            "is_buildable": isBuildable?.asParameter(codableHelper: apiConfiguration.codableHelper),
            "name": name?.asParameter(codableHelper: apiConfiguration.codableHelper),
            "num_parts": numParts?.asParameter(codableHelper: apiConfiguration.codableHelper),
        ]

        let localVariableNonNullParameters = APIHelper.rejectNil(localVariableFormParams)
        let localVariableParameters = APIHelper.convertBoolToString(localVariableNonNullParameters)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/x-www-form-urlencoded",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Add one or more Parts to the Part List.
     
     - parameter listId: (path)  
     - parameter userToken: (path)  
     - parameter partNum: (form)  
     - parameter quantity: (form)  
     - parameter colorId: (form)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersPartlistsPartsCreate(listId: String, userToken: String, partNum: String, quantity: Int, colorId: Int, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersPartlistsPartsCreateWithRequestBuilder(listId: listId, userToken: userToken, partNum: partNum, quantity: quantity, colorId: colorId, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Add one or more Parts to the Part List.
     - POST /api/v3/users/{user_token}/partlists/{list_id}/parts/
     - Add one or more Parts to the Part List.  ### Single Part When adding a single Part, returns the successfully created Part (status 201) or details for why the Part could not be added. ### Multiple Parts To add multiple Parts, POST a JSON list of them (using a Content-Type header of 'application/json'). e.g: `[{\"part_num\":\"3001\", \"color_id\": 1, \"quantity\": 10},  {\"part_num\":\"3001\", \"color_id\": 2, \"quantity\": 20},  {\"part_num\":\"3002\", \"color_id\": 14, \"quantity\": 30}]` Returns a list of successfully added Parts. If the Part already exists or is unrecognised, it will be skipped.
     - parameter listId: (path)  
     - parameter userToken: (path)  
     - parameter partNum: (form)  
     - parameter quantity: (form)  
     - parameter colorId: (form)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersPartlistsPartsCreateWithRequestBuilder(listId: String, userToken: String, partNum: String, quantity: Int, colorId: Int, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/partlists/{list_id}/parts/"
        let listIdPreEscape = "\(APIHelper.mapValueToPathItem(listId))"
        let listIdPostEscape = listIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{list_id}", with: listIdPostEscape, options: .literal, range: nil)
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableFormParams: [String: (any Sendable)?] = [
            "part_num": partNum.asParameter(codableHelper: apiConfiguration.codableHelper),
            "quantity": quantity.asParameter(codableHelper: apiConfiguration.codableHelper),
            "color_id": colorId.asParameter(codableHelper: apiConfiguration.codableHelper),
        ]

        let localVariableNonNullParameters = APIHelper.rejectNil(localVariableFormParams)
        let localVariableParameters = APIHelper.convertBoolToString(localVariableNonNullParameters)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/x-www-form-urlencoded",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Delete a Part from the Part List.
     
     - parameter listId: (path)  
     - parameter partNum: (path)  
     - parameter colorId: (path)  
     - parameter userToken: (path)  
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersPartlistsPartsDelete(listId: String, partNum: String, colorId: String, userToken: String, ordering: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersPartlistsPartsDeleteWithRequestBuilder(listId: listId, partNum: partNum, colorId: colorId, userToken: userToken, ordering: ordering, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Delete a Part from the Part List.
     - DELETE /api/v3/users/{user_token}/partlists/{list_id}/parts/{part_num}/{color_id}/
     - Delete a Part from the Part List.
     - parameter listId: (path)  
     - parameter partNum: (path)  
     - parameter colorId: (path)  
     - parameter userToken: (path)  
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersPartlistsPartsDeleteWithRequestBuilder(listId: String, partNum: String, colorId: String, userToken: String, ordering: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/partlists/{list_id}/parts/{part_num}/{color_id}/"
        let listIdPreEscape = "\(APIHelper.mapValueToPathItem(listId))"
        let listIdPostEscape = listIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{list_id}", with: listIdPostEscape, options: .literal, range: nil)
        let partNumPreEscape = "\(APIHelper.mapValueToPathItem(partNum))"
        let partNumPostEscape = partNumPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{part_num}", with: partNumPostEscape, options: .literal, range: nil)
        let colorIdPreEscape = "\(APIHelper.mapValueToPathItem(colorId))"
        let colorIdPostEscape = colorIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{color_id}", with: colorIdPostEscape, options: .literal, range: nil)
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "ordering": (wrappedValue: ordering?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get a list of all the Parts in a specific Part List.
     
     - parameter listId: (path)  
     - parameter userToken: (path)  
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersPartlistsPartsList(listId: String, userToken: String, page: Int? = nil, pageSize: Int? = nil, ordering: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersPartlistsPartsListWithRequestBuilder(listId: listId, userToken: userToken, page: page, pageSize: pageSize, ordering: ordering, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get a list of all the Parts in a specific Part List.
     - GET /api/v3/users/{user_token}/partlists/{list_id}/parts/
     - Get a list of all the Parts in a specific Part List.  Optional parameter inc_part_details=1 can be used to return additional part fields, the same as for a single part lookup. Optional parameter inc_color_details=0 can be used to prevent color field expansion and reduce response sizes.
     - parameter listId: (path)  
     - parameter userToken: (path)  
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersPartlistsPartsListWithRequestBuilder(listId: String, userToken: String, page: Int? = nil, pageSize: Int? = nil, ordering: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/partlists/{list_id}/parts/"
        let listIdPreEscape = "\(APIHelper.mapValueToPathItem(listId))"
        let listIdPostEscape = listIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{list_id}", with: listIdPostEscape, options: .literal, range: nil)
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": (wrappedValue: page?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "page_size": (wrappedValue: pageSize?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "ordering": (wrappedValue: ordering?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get details about a specific Part in the Part List.
     
     - parameter listId: (path)  
     - parameter partNum: (path)  
     - parameter colorId: (path)  
     - parameter userToken: (path)  
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersPartlistsPartsRead(listId: String, partNum: String, colorId: String, userToken: String, ordering: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersPartlistsPartsReadWithRequestBuilder(listId: listId, partNum: partNum, colorId: colorId, userToken: userToken, ordering: ordering, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get details about a specific Part in the Part List.
     - GET /api/v3/users/{user_token}/partlists/{list_id}/parts/{part_num}/{color_id}/
     - Get details about a specific Part in the Part List.
     - parameter listId: (path)  
     - parameter partNum: (path)  
     - parameter colorId: (path)  
     - parameter userToken: (path)  
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersPartlistsPartsReadWithRequestBuilder(listId: String, partNum: String, colorId: String, userToken: String, ordering: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/partlists/{list_id}/parts/{part_num}/{color_id}/"
        let listIdPreEscape = "\(APIHelper.mapValueToPathItem(listId))"
        let listIdPostEscape = listIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{list_id}", with: listIdPostEscape, options: .literal, range: nil)
        let partNumPreEscape = "\(APIHelper.mapValueToPathItem(partNum))"
        let partNumPostEscape = partNumPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{part_num}", with: partNumPostEscape, options: .literal, range: nil)
        let colorIdPreEscape = "\(APIHelper.mapValueToPathItem(colorId))"
        let colorIdPostEscape = colorIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{color_id}", with: colorIdPostEscape, options: .literal, range: nil)
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "ordering": (wrappedValue: ordering?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Replace an existing Part's details in the Part List.
     
     - parameter listId: (path)  
     - parameter partNum: (path)  
     - parameter colorId: (path)  
     - parameter userToken: (path)  
     - parameter quantity: (form)  
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersPartlistsPartsUpdate(listId: String, partNum: String, colorId: String, userToken: String, quantity: Int, ordering: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersPartlistsPartsUpdateWithRequestBuilder(listId: listId, partNum: partNum, colorId: colorId, userToken: userToken, quantity: quantity, ordering: ordering, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Replace an existing Part's details in the Part List.
     - PUT /api/v3/users/{user_token}/partlists/{list_id}/parts/{part_num}/{color_id}/
     - Replace an existing Part's details in the Part List.
     - parameter listId: (path)  
     - parameter partNum: (path)  
     - parameter colorId: (path)  
     - parameter userToken: (path)  
     - parameter quantity: (form)  
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersPartlistsPartsUpdateWithRequestBuilder(listId: String, partNum: String, colorId: String, userToken: String, quantity: Int, ordering: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/partlists/{list_id}/parts/{part_num}/{color_id}/"
        let listIdPreEscape = "\(APIHelper.mapValueToPathItem(listId))"
        let listIdPostEscape = listIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{list_id}", with: listIdPostEscape, options: .literal, range: nil)
        let partNumPreEscape = "\(APIHelper.mapValueToPathItem(partNum))"
        let partNumPostEscape = partNumPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{part_num}", with: partNumPostEscape, options: .literal, range: nil)
        let colorIdPreEscape = "\(APIHelper.mapValueToPathItem(colorId))"
        let colorIdPostEscape = colorIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{color_id}", with: colorIdPostEscape, options: .literal, range: nil)
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableFormParams: [String: (any Sendable)?] = [
            "quantity": quantity.asParameter(codableHelper: apiConfiguration.codableHelper),
        ]

        let localVariableNonNullParameters = APIHelper.rejectNil(localVariableFormParams)
        let localVariableParameters = APIHelper.convertBoolToString(localVariableNonNullParameters)

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "ordering": (wrappedValue: ordering?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/x-www-form-urlencoded",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get details about a specific Part List.
     
     - parameter listId: (path)  
     - parameter userToken: (path)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersPartlistsRead(listId: String, userToken: String, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersPartlistsReadWithRequestBuilder(listId: listId, userToken: userToken, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get details about a specific Part List.
     - GET /api/v3/users/{user_token}/partlists/{list_id}/
     - Get details about a specific Part List.
     - parameter listId: (path)  
     - parameter userToken: (path)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersPartlistsReadWithRequestBuilder(listId: String, userToken: String, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/partlists/{list_id}/"
        let listIdPreEscape = "\(APIHelper.mapValueToPathItem(listId))"
        let listIdPostEscape = listIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{list_id}", with: listIdPostEscape, options: .literal, range: nil)
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Replace an existing Part List's details.
     
     - parameter listId: (path)  
     - parameter userToken: (path)  
     - parameter name: (form)  
     - parameter isBuildable: (form)  (optional)
     - parameter numParts: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersPartlistsUpdate(listId: String, userToken: String, name: String, isBuildable: Bool? = nil, numParts: Int? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersPartlistsUpdateWithRequestBuilder(listId: listId, userToken: userToken, name: name, isBuildable: isBuildable, numParts: numParts, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Replace an existing Part List's details.
     - PUT /api/v3/users/{user_token}/partlists/{list_id}/
     - Replace an existing Part List's details.
     - parameter listId: (path)  
     - parameter userToken: (path)  
     - parameter name: (form)  
     - parameter isBuildable: (form)  (optional)
     - parameter numParts: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersPartlistsUpdateWithRequestBuilder(listId: String, userToken: String, name: String, isBuildable: Bool? = nil, numParts: Int? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/partlists/{list_id}/"
        let listIdPreEscape = "\(APIHelper.mapValueToPathItem(listId))"
        let listIdPostEscape = listIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{list_id}", with: listIdPostEscape, options: .literal, range: nil)
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableFormParams: [String: (any Sendable)?] = [
            "is_buildable": isBuildable?.asParameter(codableHelper: apiConfiguration.codableHelper),
            "name": name.asParameter(codableHelper: apiConfiguration.codableHelper),
            "num_parts": numParts?.asParameter(codableHelper: apiConfiguration.codableHelper),
        ]

        let localVariableNonNullParameters = APIHelper.rejectNil(localVariableFormParams)
        let localVariableParameters = APIHelper.convertBoolToString(localVariableNonNullParameters)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/x-www-form-urlencoded",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get a list of all the Parts in all the user's Part Lists.
     
     - parameter userToken: (path)  
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter partNum: (query)  (optional)
     - parameter partCatId: (query)  (optional)
     - parameter colorId: (query)  (optional)
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter search: (query) A search term. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersPartsList(userToken: String, page: Int? = nil, pageSize: Int? = nil, partNum: String? = nil, partCatId: Double? = nil, colorId: Double? = nil, ordering: String? = nil, search: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersPartsListWithRequestBuilder(userToken: userToken, page: page, pageSize: pageSize, partNum: partNum, partCatId: partCatId, colorId: colorId, ordering: ordering, search: search, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get a list of all the Parts in all the user's Part Lists.
     - GET /api/v3/users/{user_token}/parts/
     - Get a list of all the Parts in all the user's Part Lists.  Optional parameter inc_part_details=1 can be used to return additional part fields, the same as for a single part lookup.  ###Set List logic Parts appearing in multiple Part Lists will be listed multiple times.  Optionally, filter by one or more of the below query parameters.
     - parameter userToken: (path)  
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter partNum: (query)  (optional)
     - parameter partCatId: (query)  (optional)
     - parameter colorId: (query)  (optional)
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter search: (query) A search term. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersPartsListWithRequestBuilder(userToken: String, page: Int? = nil, pageSize: Int? = nil, partNum: String? = nil, partCatId: Double? = nil, colorId: Double? = nil, ordering: String? = nil, search: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/parts/"
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": (wrappedValue: page?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "page_size": (wrappedValue: pageSize?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "part_num": (wrappedValue: partNum?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "part_cat_id": (wrappedValue: partCatId?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "color_id": (wrappedValue: colorId?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "ordering": (wrappedValue: ordering?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "search": (wrappedValue: search?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get details about a specific user.
     
     - parameter userToken: (path)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersProfileRead(userToken: String, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersProfileReadWithRequestBuilder(userToken: userToken, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get details about a specific user.
     - GET /api/v3/users/{user_token}/profile/
     - Get details about a specific user.
     - parameter userToken: (path)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersProfileReadWithRequestBuilder(userToken: String, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/profile/"
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Add a new Set List.
     
     - parameter userToken: (path)  
     - parameter name: (form)  
     - parameter isBuildable: (form)  (optional)
     - parameter numSets: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersSetlistsCreate(userToken: String, name: String, isBuildable: Bool? = nil, numSets: Int? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersSetlistsCreateWithRequestBuilder(userToken: userToken, name: name, isBuildable: isBuildable, numSets: numSets, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Add a new Set List.
     - POST /api/v3/users/{user_token}/setlists/
     - Add a new Set List.
     - parameter userToken: (path)  
     - parameter name: (form)  
     - parameter isBuildable: (form)  (optional)
     - parameter numSets: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersSetlistsCreateWithRequestBuilder(userToken: String, name: String, isBuildable: Bool? = nil, numSets: Int? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/setlists/"
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableFormParams: [String: (any Sendable)?] = [
            "is_buildable": isBuildable?.asParameter(codableHelper: apiConfiguration.codableHelper),
            "name": name.asParameter(codableHelper: apiConfiguration.codableHelper),
            "num_sets": numSets?.asParameter(codableHelper: apiConfiguration.codableHelper),
        ]

        let localVariableNonNullParameters = APIHelper.rejectNil(localVariableFormParams)
        let localVariableParameters = APIHelper.convertBoolToString(localVariableNonNullParameters)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/x-www-form-urlencoded",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Delete a Set List and all it's Sets.
     
     - parameter listId: (path)  
     - parameter userToken: (path)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersSetlistsDelete(listId: String, userToken: String, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersSetlistsDeleteWithRequestBuilder(listId: listId, userToken: userToken, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Delete a Set List and all it's Sets.
     - DELETE /api/v3/users/{user_token}/setlists/{list_id}/
     - Delete a Set List and all it's Sets.
     - parameter listId: (path)  
     - parameter userToken: (path)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersSetlistsDeleteWithRequestBuilder(listId: String, userToken: String, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/setlists/{list_id}/"
        let listIdPreEscape = "\(APIHelper.mapValueToPathItem(listId))"
        let listIdPostEscape = listIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{list_id}", with: listIdPostEscape, options: .literal, range: nil)
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get a list of all the user's Set Lists.
     
     - parameter userToken: (path)  
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersSetlistsList(userToken: String, page: Int? = nil, pageSize: Int? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersSetlistsListWithRequestBuilder(userToken: userToken, page: page, pageSize: pageSize, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get a list of all the user's Set Lists.
     - GET /api/v3/users/{user_token}/setlists/
     - Get a list of all the user's Set Lists.
     - parameter userToken: (path)  
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersSetlistsListWithRequestBuilder(userToken: String, page: Int? = nil, pageSize: Int? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/setlists/"
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": (wrappedValue: page?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "page_size": (wrappedValue: pageSize?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Update an existing Set List's details.
     
     - parameter listId: (path)  
     - parameter userToken: (path)  
     - parameter isBuildable: (form)  (optional)
     - parameter name: (form)  (optional)
     - parameter numSets: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersSetlistsPartialUpdate(listId: String, userToken: String, isBuildable: Bool? = nil, name: String? = nil, numSets: Int? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersSetlistsPartialUpdateWithRequestBuilder(listId: listId, userToken: userToken, isBuildable: isBuildable, name: name, numSets: numSets, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Update an existing Set List's details.
     - PATCH /api/v3/users/{user_token}/setlists/{list_id}/
     - Update an existing Set List's details.
     - parameter listId: (path)  
     - parameter userToken: (path)  
     - parameter isBuildable: (form)  (optional)
     - parameter name: (form)  (optional)
     - parameter numSets: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersSetlistsPartialUpdateWithRequestBuilder(listId: String, userToken: String, isBuildable: Bool? = nil, name: String? = nil, numSets: Int? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/setlists/{list_id}/"
        let listIdPreEscape = "\(APIHelper.mapValueToPathItem(listId))"
        let listIdPostEscape = listIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{list_id}", with: listIdPostEscape, options: .literal, range: nil)
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableFormParams: [String: (any Sendable)?] = [
            "is_buildable": isBuildable?.asParameter(codableHelper: apiConfiguration.codableHelper),
            "name": name?.asParameter(codableHelper: apiConfiguration.codableHelper),
            "num_sets": numSets?.asParameter(codableHelper: apiConfiguration.codableHelper),
        ]

        let localVariableNonNullParameters = APIHelper.rejectNil(localVariableFormParams)
        let localVariableParameters = APIHelper.convertBoolToString(localVariableNonNullParameters)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/x-www-form-urlencoded",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get details about a specific Set List.
     
     - parameter listId: (path)  
     - parameter userToken: (path)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersSetlistsRead(listId: String, userToken: String, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersSetlistsReadWithRequestBuilder(listId: listId, userToken: userToken, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get details about a specific Set List.
     - GET /api/v3/users/{user_token}/setlists/{list_id}/
     - Get details about a specific Set List.
     - parameter listId: (path)  
     - parameter userToken: (path)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersSetlistsReadWithRequestBuilder(listId: String, userToken: String, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/setlists/{list_id}/"
        let listIdPreEscape = "\(APIHelper.mapValueToPathItem(listId))"
        let listIdPostEscape = listIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{list_id}", with: listIdPostEscape, options: .literal, range: nil)
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Add one or more Sets to the Set List. Existing Sets are unaffected.
     
     - parameter listId: (path)  
     - parameter userToken: (path)  
     - parameter setNum: (form)  
     - parameter quantity: (form)  (optional)
     - parameter includeSpares: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersSetlistsSetsCreate(listId: String, userToken: String, setNum: String, quantity: Int? = nil, includeSpares: Bool? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersSetlistsSetsCreateWithRequestBuilder(listId: listId, userToken: userToken, setNum: setNum, quantity: quantity, includeSpares: includeSpares, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Add one or more Sets to the Set List. Existing Sets are unaffected.
     - POST /api/v3/users/{user_token}/setlists/{list_id}/sets/
     - Add one or more Sets to the Set List. Existing Sets are unaffected.  ### Single Set When adding a single Set, returns the successfully created Set (status 201) or details for why the Set could not be added. ### Multiple Sets To add multiple Sets, POST a JSON list of them (using a Content-Type header of 'application/json'). e.g: `[{\"set_num\":\"8043-1\", \"quantity\": 1},  {\"set_num\":\"8110-1\", \"quantity\": 2, \"include_spares\": \"False\"}]` Returns a list of successfully added Sets. If the Set already exists or is unrecognised, it will be skipped.
     - parameter listId: (path)  
     - parameter userToken: (path)  
     - parameter setNum: (form)  
     - parameter quantity: (form)  (optional)
     - parameter includeSpares: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersSetlistsSetsCreateWithRequestBuilder(listId: String, userToken: String, setNum: String, quantity: Int? = nil, includeSpares: Bool? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/setlists/{list_id}/sets/"
        let listIdPreEscape = "\(APIHelper.mapValueToPathItem(listId))"
        let listIdPostEscape = listIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{list_id}", with: listIdPostEscape, options: .literal, range: nil)
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableFormParams: [String: (any Sendable)?] = [
            "set_num": setNum.asParameter(codableHelper: apiConfiguration.codableHelper),
            "quantity": quantity?.asParameter(codableHelper: apiConfiguration.codableHelper),
            "include_spares": includeSpares?.asParameter(codableHelper: apiConfiguration.codableHelper),
        ]

        let localVariableNonNullParameters = APIHelper.rejectNil(localVariableFormParams)
        let localVariableParameters = APIHelper.convertBoolToString(localVariableNonNullParameters)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/x-www-form-urlencoded",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Delete a Set from the Set List.
     
     - parameter listId: (path)  
     - parameter setNum: (path)  
     - parameter userToken: (path)  
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersSetlistsSetsDelete(listId: String, setNum: String, userToken: String, ordering: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersSetlistsSetsDeleteWithRequestBuilder(listId: listId, setNum: setNum, userToken: userToken, ordering: ordering, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Delete a Set from the Set List.
     - DELETE /api/v3/users/{user_token}/setlists/{list_id}/sets/{set_num}/
     - Delete a Set from the Set List.
     - parameter listId: (path)  
     - parameter setNum: (path)  
     - parameter userToken: (path)  
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersSetlistsSetsDeleteWithRequestBuilder(listId: String, setNum: String, userToken: String, ordering: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/setlists/{list_id}/sets/{set_num}/"
        let listIdPreEscape = "\(APIHelper.mapValueToPathItem(listId))"
        let listIdPostEscape = listIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{list_id}", with: listIdPostEscape, options: .literal, range: nil)
        let setNumPreEscape = "\(APIHelper.mapValueToPathItem(setNum))"
        let setNumPostEscape = setNumPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{set_num}", with: setNumPostEscape, options: .literal, range: nil)
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "ordering": (wrappedValue: ordering?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get a list of all the Sets in a specific Set List.
     
     - parameter listId: (path)  
     - parameter userToken: (path)  
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersSetlistsSetsList(listId: String, userToken: String, page: Int? = nil, pageSize: Int? = nil, ordering: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersSetlistsSetsListWithRequestBuilder(listId: listId, userToken: userToken, page: page, pageSize: pageSize, ordering: ordering, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get a list of all the Sets in a specific Set List.
     - GET /api/v3/users/{user_token}/setlists/{list_id}/sets/
     - Get a list of all the Sets in a specific Set List.
     - parameter listId: (path)  
     - parameter userToken: (path)  
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersSetlistsSetsListWithRequestBuilder(listId: String, userToken: String, page: Int? = nil, pageSize: Int? = nil, ordering: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/setlists/{list_id}/sets/"
        let listIdPreEscape = "\(APIHelper.mapValueToPathItem(listId))"
        let listIdPostEscape = listIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{list_id}", with: listIdPostEscape, options: .literal, range: nil)
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": (wrappedValue: page?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "page_size": (wrappedValue: pageSize?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "ordering": (wrappedValue: ordering?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Update an existing Set's details in the Set List.
     
     - parameter listId: (path)  
     - parameter setNum: (path)  
     - parameter userToken: (path)  
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter quantity: (form)  (optional)
     - parameter includeSpares: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersSetlistsSetsPartialUpdate(listId: String, setNum: String, userToken: String, ordering: String? = nil, quantity: Int? = nil, includeSpares: Bool? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersSetlistsSetsPartialUpdateWithRequestBuilder(listId: listId, setNum: setNum, userToken: userToken, ordering: ordering, quantity: quantity, includeSpares: includeSpares, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Update an existing Set's details in the Set List.
     - PATCH /api/v3/users/{user_token}/setlists/{list_id}/sets/{set_num}/
     - Update an existing Set's details in the Set List.
     - parameter listId: (path)  
     - parameter setNum: (path)  
     - parameter userToken: (path)  
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter quantity: (form)  (optional)
     - parameter includeSpares: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersSetlistsSetsPartialUpdateWithRequestBuilder(listId: String, setNum: String, userToken: String, ordering: String? = nil, quantity: Int? = nil, includeSpares: Bool? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/setlists/{list_id}/sets/{set_num}/"
        let listIdPreEscape = "\(APIHelper.mapValueToPathItem(listId))"
        let listIdPostEscape = listIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{list_id}", with: listIdPostEscape, options: .literal, range: nil)
        let setNumPreEscape = "\(APIHelper.mapValueToPathItem(setNum))"
        let setNumPostEscape = setNumPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{set_num}", with: setNumPostEscape, options: .literal, range: nil)
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableFormParams: [String: (any Sendable)?] = [
            "quantity": quantity?.asParameter(codableHelper: apiConfiguration.codableHelper),
            "include_spares": includeSpares?.asParameter(codableHelper: apiConfiguration.codableHelper),
        ]

        let localVariableNonNullParameters = APIHelper.rejectNil(localVariableFormParams)
        let localVariableParameters = APIHelper.convertBoolToString(localVariableNonNullParameters)

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "ordering": (wrappedValue: ordering?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/x-www-form-urlencoded",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get details about a specific Set in the Set List.
     
     - parameter listId: (path)  
     - parameter setNum: (path)  
     - parameter userToken: (path)  
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersSetlistsSetsRead(listId: String, setNum: String, userToken: String, ordering: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersSetlistsSetsReadWithRequestBuilder(listId: listId, setNum: setNum, userToken: userToken, ordering: ordering, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get details about a specific Set in the Set List.
     - GET /api/v3/users/{user_token}/setlists/{list_id}/sets/{set_num}/
     - Get details about a specific Set in the Set List.
     - parameter listId: (path)  
     - parameter setNum: (path)  
     - parameter userToken: (path)  
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersSetlistsSetsReadWithRequestBuilder(listId: String, setNum: String, userToken: String, ordering: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/setlists/{list_id}/sets/{set_num}/"
        let listIdPreEscape = "\(APIHelper.mapValueToPathItem(listId))"
        let listIdPostEscape = listIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{list_id}", with: listIdPostEscape, options: .literal, range: nil)
        let setNumPreEscape = "\(APIHelper.mapValueToPathItem(setNum))"
        let setNumPostEscape = setNumPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{set_num}", with: setNumPostEscape, options: .literal, range: nil)
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "ordering": (wrappedValue: ordering?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Replace an existing Set's details in the Set List.
     
     - parameter listId: (path)  
     - parameter setNum: (path)  
     - parameter userToken: (path)  
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter quantity: (form)  (optional)
     - parameter includeSpares: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersSetlistsSetsUpdate(listId: String, setNum: String, userToken: String, ordering: String? = nil, quantity: Int? = nil, includeSpares: Bool? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersSetlistsSetsUpdateWithRequestBuilder(listId: listId, setNum: setNum, userToken: userToken, ordering: ordering, quantity: quantity, includeSpares: includeSpares, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Replace an existing Set's details in the Set List.
     - PUT /api/v3/users/{user_token}/setlists/{list_id}/sets/{set_num}/
     - Replace an existing Set's details in the Set List.
     - parameter listId: (path)  
     - parameter setNum: (path)  
     - parameter userToken: (path)  
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter quantity: (form)  (optional)
     - parameter includeSpares: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersSetlistsSetsUpdateWithRequestBuilder(listId: String, setNum: String, userToken: String, ordering: String? = nil, quantity: Int? = nil, includeSpares: Bool? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/setlists/{list_id}/sets/{set_num}/"
        let listIdPreEscape = "\(APIHelper.mapValueToPathItem(listId))"
        let listIdPostEscape = listIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{list_id}", with: listIdPostEscape, options: .literal, range: nil)
        let setNumPreEscape = "\(APIHelper.mapValueToPathItem(setNum))"
        let setNumPostEscape = setNumPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{set_num}", with: setNumPostEscape, options: .literal, range: nil)
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableFormParams: [String: (any Sendable)?] = [
            "quantity": quantity?.asParameter(codableHelper: apiConfiguration.codableHelper),
            "include_spares": includeSpares?.asParameter(codableHelper: apiConfiguration.codableHelper),
        ]

        let localVariableNonNullParameters = APIHelper.rejectNil(localVariableFormParams)
        let localVariableParameters = APIHelper.convertBoolToString(localVariableNonNullParameters)

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "ordering": (wrappedValue: ordering?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/x-www-form-urlencoded",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Replace an existing Set List's details.
     
     - parameter listId: (path)  
     - parameter userToken: (path)  
     - parameter name: (form)  
     - parameter isBuildable: (form)  (optional)
     - parameter numSets: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersSetlistsUpdate(listId: String, userToken: String, name: String, isBuildable: Bool? = nil, numSets: Int? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersSetlistsUpdateWithRequestBuilder(listId: listId, userToken: userToken, name: name, isBuildable: isBuildable, numSets: numSets, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Replace an existing Set List's details.
     - PUT /api/v3/users/{user_token}/setlists/{list_id}/
     - Replace an existing Set List's details.
     - parameter listId: (path)  
     - parameter userToken: (path)  
     - parameter name: (form)  
     - parameter isBuildable: (form)  (optional)
     - parameter numSets: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersSetlistsUpdateWithRequestBuilder(listId: String, userToken: String, name: String, isBuildable: Bool? = nil, numSets: Int? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/setlists/{list_id}/"
        let listIdPreEscape = "\(APIHelper.mapValueToPathItem(listId))"
        let listIdPostEscape = listIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{list_id}", with: listIdPostEscape, options: .literal, range: nil)
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableFormParams: [String: (any Sendable)?] = [
            "is_buildable": isBuildable?.asParameter(codableHelper: apiConfiguration.codableHelper),
            "name": name.asParameter(codableHelper: apiConfiguration.codableHelper),
            "num_sets": numSets?.asParameter(codableHelper: apiConfiguration.codableHelper),
        ]

        let localVariableNonNullParameters = APIHelper.rejectNil(localVariableFormParams)
        let localVariableParameters = APIHelper.convertBoolToString(localVariableNonNullParameters)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/x-www-form-urlencoded",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Add one or more Sets to the user's LEGO collection. Existing Sets are unaffected.
     
     - parameter userToken: (path)  
     - parameter setNum: (form)  
     - parameter quantity: (form)  (optional)
     - parameter includeSpares: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersSetsCreate(userToken: String, setNum: String, quantity: Int? = nil, includeSpares: Bool? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersSetsCreateWithRequestBuilder(userToken: userToken, setNum: setNum, quantity: quantity, includeSpares: includeSpares, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Add one or more Sets to the user's LEGO collection. Existing Sets are unaffected.
     - POST /api/v3/users/{user_token}/sets/
     - Add one or more Sets to the user's LEGO collection. Existing Sets are unaffected.  ### Set List logic The Set List used when adding sets is chosen in the following order: 1. If no Set Lists exist, one will be created and used 2. User's configured default Set List for Imports 3. The first Set List alphabetically  ### Single Set When adding a single Set, returns the successfully created Set (status 201) or details for why the Set could not be added. ### Multiple Sets To add multiple Sets, POST a JSON list of them (using a Content-Type header of 'application/json'). e.g: `[{\"set_num\":\"8043-1\", \"quantity\": 1},  {\"set_num\":\"8110-1\", \"quantity\": 2, \"include_spares\": \"False\"}]` Returns a list of successfully added Sets. If the Set already exists or is unrecognised, it will be skipped.
     - parameter userToken: (path)  
     - parameter setNum: (form)  
     - parameter quantity: (form)  (optional)
     - parameter includeSpares: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersSetsCreateWithRequestBuilder(userToken: String, setNum: String, quantity: Int? = nil, includeSpares: Bool? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/sets/"
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableFormParams: [String: (any Sendable)?] = [
            "set_num": setNum.asParameter(codableHelper: apiConfiguration.codableHelper),
            "quantity": quantity?.asParameter(codableHelper: apiConfiguration.codableHelper),
            "include_spares": includeSpares?.asParameter(codableHelper: apiConfiguration.codableHelper),
        ]

        let localVariableNonNullParameters = APIHelper.rejectNil(localVariableFormParams)
        let localVariableParameters = APIHelper.convertBoolToString(localVariableNonNullParameters)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/x-www-form-urlencoded",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Delete the Set from all the user's Set Lists.
     
     - parameter setNum: (path)  
     - parameter userToken: (path)  
     - parameter setNum2: (query)  (optional)
     - parameter themeId: (query)  (optional)
     - parameter minYear: (query)  (optional)
     - parameter maxYear: (query)  (optional)
     - parameter minParts: (query)  (optional)
     - parameter maxParts: (query)  (optional)
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter search: (query) A search term. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersSetsDelete(setNum: String, userToken: String, setNum2: String? = nil, themeId: Double? = nil, minYear: Double? = nil, maxYear: Double? = nil, minParts: Double? = nil, maxParts: Double? = nil, ordering: String? = nil, search: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersSetsDeleteWithRequestBuilder(setNum: setNum, userToken: userToken, setNum2: setNum2, themeId: themeId, minYear: minYear, maxYear: maxYear, minParts: minParts, maxParts: maxParts, ordering: ordering, search: search, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Delete the Set from all the user's Set Lists.
     - DELETE /api/v3/users/{user_token}/sets/{set_num}/
     - Delete the Set from all the user's Set Lists.
     - parameter setNum: (path)  
     - parameter userToken: (path)  
     - parameter setNum2: (query)  (optional)
     - parameter themeId: (query)  (optional)
     - parameter minYear: (query)  (optional)
     - parameter maxYear: (query)  (optional)
     - parameter minParts: (query)  (optional)
     - parameter maxParts: (query)  (optional)
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter search: (query) A search term. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersSetsDeleteWithRequestBuilder(setNum: String, userToken: String, setNum2: String? = nil, themeId: Double? = nil, minYear: Double? = nil, maxYear: Double? = nil, minParts: Double? = nil, maxParts: Double? = nil, ordering: String? = nil, search: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/sets/{set_num}/"
        let setNumPreEscape = "\(APIHelper.mapValueToPathItem(setNum))"
        let setNumPostEscape = setNumPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{set_num}", with: setNumPostEscape, options: .literal, range: nil)
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "set_num": (wrappedValue: setNum2?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "theme_id": (wrappedValue: themeId?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "min_year": (wrappedValue: minYear?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "max_year": (wrappedValue: maxYear?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "min_parts": (wrappedValue: minParts?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "max_parts": (wrappedValue: maxParts?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "ordering": (wrappedValue: ordering?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "search": (wrappedValue: search?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get a list of all the Sets in the user's LEGO collection.
     
     - parameter userToken: (path)  
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter setNum: (query)  (optional)
     - parameter themeId: (query)  (optional)
     - parameter minYear: (query)  (optional)
     - parameter maxYear: (query)  (optional)
     - parameter minParts: (query)  (optional)
     - parameter maxParts: (query)  (optional)
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter search: (query) A search term. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersSetsList(userToken: String, page: Int? = nil, pageSize: Int? = nil, setNum: String? = nil, themeId: Double? = nil, minYear: Double? = nil, maxYear: Double? = nil, minParts: Double? = nil, maxParts: Double? = nil, ordering: String? = nil, search: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersSetsListWithRequestBuilder(userToken: userToken, page: page, pageSize: pageSize, setNum: setNum, themeId: themeId, minYear: minYear, maxYear: maxYear, minParts: minParts, maxParts: maxParts, ordering: ordering, search: search, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get a list of all the Sets in the user's LEGO collection.
     - GET /api/v3/users/{user_token}/sets/
     - Get a list of all the Sets in the user's LEGO collection.  ### Set List logic Sets appearing in multiple Set Lists will be listed multiple times.  Optionally, filter by one or more of the below query parameters.
     - parameter userToken: (path)  
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter setNum: (query)  (optional)
     - parameter themeId: (query)  (optional)
     - parameter minYear: (query)  (optional)
     - parameter maxYear: (query)  (optional)
     - parameter minParts: (query)  (optional)
     - parameter maxParts: (query)  (optional)
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter search: (query) A search term. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersSetsListWithRequestBuilder(userToken: String, page: Int? = nil, pageSize: Int? = nil, setNum: String? = nil, themeId: Double? = nil, minYear: Double? = nil, maxYear: Double? = nil, minParts: Double? = nil, maxParts: Double? = nil, ordering: String? = nil, search: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/sets/"
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": (wrappedValue: page?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "page_size": (wrappedValue: pageSize?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "set_num": (wrappedValue: setNum?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "theme_id": (wrappedValue: themeId?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "min_year": (wrappedValue: minYear?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "max_year": (wrappedValue: maxYear?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "min_parts": (wrappedValue: minParts?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "max_parts": (wrappedValue: maxParts?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "ordering": (wrappedValue: ordering?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "search": (wrappedValue: search?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get details about a specific Set in the user's LEGO collection.
     
     - parameter setNum: (path)  
     - parameter userToken: (path)  
     - parameter setNum2: (query)  (optional)
     - parameter themeId: (query)  (optional)
     - parameter minYear: (query)  (optional)
     - parameter maxYear: (query)  (optional)
     - parameter minParts: (query)  (optional)
     - parameter maxParts: (query)  (optional)
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter search: (query) A search term. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersSetsRead(setNum: String, userToken: String, setNum2: String? = nil, themeId: Double? = nil, minYear: Double? = nil, maxYear: Double? = nil, minParts: Double? = nil, maxParts: Double? = nil, ordering: String? = nil, search: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersSetsReadWithRequestBuilder(setNum: setNum, userToken: userToken, setNum2: setNum2, themeId: themeId, minYear: minYear, maxYear: maxYear, minParts: minParts, maxParts: maxParts, ordering: ordering, search: search, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get details about a specific Set in the user's LEGO collection.
     - GET /api/v3/users/{user_token}/sets/{set_num}/
     - Get details about a specific Set in the user's LEGO collection.  ### Set List logic Because this merges sets found across all Set Lists the fields list_id and include_spares may not be accurate unless the Set actually only exists in a single Set List.
     - parameter setNum: (path)  
     - parameter userToken: (path)  
     - parameter setNum2: (query)  (optional)
     - parameter themeId: (query)  (optional)
     - parameter minYear: (query)  (optional)
     - parameter maxYear: (query)  (optional)
     - parameter minParts: (query)  (optional)
     - parameter maxParts: (query)  (optional)
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter search: (query) A search term. (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersSetsReadWithRequestBuilder(setNum: String, userToken: String, setNum2: String? = nil, themeId: Double? = nil, minYear: Double? = nil, maxYear: Double? = nil, minParts: Double? = nil, maxParts: Double? = nil, ordering: String? = nil, search: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/sets/{set_num}/"
        let setNumPreEscape = "\(APIHelper.mapValueToPathItem(setNum))"
        let setNumPostEscape = setNumPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{set_num}", with: setNumPostEscape, options: .literal, range: nil)
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "set_num": (wrappedValue: setNum2?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "theme_id": (wrappedValue: themeId?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "min_year": (wrappedValue: minYear?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "max_year": (wrappedValue: maxYear?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "min_parts": (wrappedValue: minParts?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "max_parts": (wrappedValue: maxParts?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "ordering": (wrappedValue: ordering?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "search": (wrappedValue: search?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Synchronise a user's Sets to the POSTed list.
     
     - parameter userToken: (path)  
     - parameter setNum: (form)  
     - parameter quantity: (form)  (optional)
     - parameter includeSpares: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersSetsSyncCreate(userToken: String, setNum: String, quantity: Int? = nil, includeSpares: Bool? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersSetsSyncCreateWithRequestBuilder(userToken: userToken, setNum: setNum, quantity: quantity, includeSpares: includeSpares, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Synchronise a user's Sets to the POSTed list.
     - POST /api/v3/users/{user_token}/sets/sync/
     - Synchronise a user's Sets to the POSTed list.  ### Set List logic This is used to completely replace the user's Sets with those in the supplied list. It will remove any Sets in Rebrickable that are not found in the supplied list. It will attempt to keep any current Rebrickable Sets in their existing Set Lists, and will add any new Sets found into the Default Set List for Imports in the user's settings. ### Single Set When adding a single Set, returns the successfully created Set (status 201) or details for why the Set could not be added. ### Multiple Sets To add multiple Sets, POST a JSON list of them (using a Content-Type header of 'application/json'). e.g: `[{\"set_num\":\"8043-1\", \"quantity\": 1},  {\"set_num\":\"8110-1\", \"quantity\": 2, \"include_spares\": \"False\"}]` Returns a list of successfully added Sets. If the Set is unrecognised, it will be skipped.
     - parameter userToken: (path)  
     - parameter setNum: (form)  
     - parameter quantity: (form)  (optional)
     - parameter includeSpares: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersSetsSyncCreateWithRequestBuilder(userToken: String, setNum: String, quantity: Int? = nil, includeSpares: Bool? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/sets/sync/"
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableFormParams: [String: (any Sendable)?] = [
            "quantity": quantity?.asParameter(codableHelper: apiConfiguration.codableHelper),
            "include_spares": includeSpares?.asParameter(codableHelper: apiConfiguration.codableHelper),
            "set_num": setNum.asParameter(codableHelper: apiConfiguration.codableHelper),
        ]

        let localVariableNonNullParameters = APIHelper.rejectNil(localVariableFormParams)
        let localVariableParameters = APIHelper.convertBoolToString(localVariableNonNullParameters)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/x-www-form-urlencoded",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Update an existing Set's quantity in all Set Lists. This PUT call is different to others in that it will create
     
     - parameter setNum: (path)  
     - parameter userToken: (path)  
     - parameter setNum2: (query)  (optional)
     - parameter themeId: (query)  (optional)
     - parameter minYear: (query)  (optional)
     - parameter maxYear: (query)  (optional)
     - parameter minParts: (query)  (optional)
     - parameter maxParts: (query)  (optional)
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter search: (query) A search term. (optional)
     - parameter quantity: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersSetsUpdate(setNum: String, userToken: String, setNum2: String? = nil, themeId: Double? = nil, minYear: Double? = nil, maxYear: Double? = nil, minParts: Double? = nil, maxParts: Double? = nil, ordering: String? = nil, search: String? = nil, quantity: Int? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersSetsUpdateWithRequestBuilder(setNum: setNum, userToken: userToken, setNum2: setNum2, themeId: themeId, minYear: minYear, maxYear: maxYear, minParts: minParts, maxParts: maxParts, ordering: ordering, search: search, quantity: quantity, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Update an existing Set's quantity in all Set Lists. This PUT call is different to others in that it will create
     - PUT /api/v3/users/{user_token}/sets/{set_num}/
     - Update an existing Set's quantity in all Set Lists. This PUT call is different to others in that it will create the Set if it doesn't already exist, and it will delete the Set if you pass a quantity of 0.  ### Set List logic * Default Set List = user's configured default import list or the first alphabetically if none exist. * Increasing quantity = add to Set in default Set List if it exists, else add it there * Decreasing quantity = remove from Set in default Set List first, then from remaining lists until done
     - parameter setNum: (path)  
     - parameter userToken: (path)  
     - parameter setNum2: (query)  (optional)
     - parameter themeId: (query)  (optional)
     - parameter minYear: (query)  (optional)
     - parameter maxYear: (query)  (optional)
     - parameter minParts: (query)  (optional)
     - parameter maxParts: (query)  (optional)
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter search: (query) A search term. (optional)
     - parameter quantity: (form)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersSetsUpdateWithRequestBuilder(setNum: String, userToken: String, setNum2: String? = nil, themeId: Double? = nil, minYear: Double? = nil, maxYear: Double? = nil, minParts: Double? = nil, maxParts: Double? = nil, ordering: String? = nil, search: String? = nil, quantity: Int? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/users/{user_token}/sets/{set_num}/"
        let setNumPreEscape = "\(APIHelper.mapValueToPathItem(setNum))"
        let setNumPostEscape = setNumPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{set_num}", with: setNumPostEscape, options: .literal, range: nil)
        let userTokenPreEscape = "\(APIHelper.mapValueToPathItem(userToken))"
        let userTokenPostEscape = userTokenPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{user_token}", with: userTokenPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableFormParams: [String: (any Sendable)?] = [
            "quantity": quantity?.asParameter(codableHelper: apiConfiguration.codableHelper),
        ]

        let localVariableNonNullParameters = APIHelper.rejectNil(localVariableFormParams)
        let localVariableParameters = APIHelper.convertBoolToString(localVariableNonNullParameters)

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "set_num": (wrappedValue: setNum2?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "theme_id": (wrappedValue: themeId?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "min_year": (wrappedValue: minYear?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "max_year": (wrappedValue: maxYear?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "min_parts": (wrappedValue: minParts?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "max_parts": (wrappedValue: maxParts?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "ordering": (wrappedValue: ordering?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "search": (wrappedValue: search?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/x-www-form-urlencoded",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Generate a User Token to be used for authorising user account actions in subsequent calls. Username can be either
     
     - parameter username: (form) Username (or email) of user 
     - parameter password: (form) Password of user 
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func usersTokenCreate(username: String, password: String, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await usersTokenCreateWithRequestBuilder(username: username, password: password, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Generate a User Token to be used for authorising user account actions in subsequent calls. Username can be either
     - POST /api/v3/users/_token/
     - Generate a User Token to be used for authorising user account actions in subsequent calls. Username can be either  the actual username or the user's email address.
     - parameter username: (form) Username (or email) of user 
     - parameter password: (form) Password of user 
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func usersTokenCreateWithRequestBuilder(username: String, password: String, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        let localVariablePath = "/api/v3/users/_token/"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableFormParams: [String: (any Sendable)?] = [
            "username": username.asParameter(codableHelper: apiConfiguration.codableHelper),
            "password": password.asParameter(codableHelper: apiConfiguration.codableHelper),
        ]

        let localVariableNonNullParameters = APIHelper.rejectNil(localVariableFormParams)
        let localVariableParameters = APIHelper.convertBoolToString(localVariableNonNullParameters)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/x-www-form-urlencoded",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }
}
