//
// Color.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct Color: Sendable, Codable, ParameterConvertible, Hashable {
    public var externalIds: ColorExternalIds?
    public var id: Int?
    public var isTrans: Bool?
    public var name: String?
    public var rgb: String?

    public init(
        externalIds: ColorExternalIds?, id: Int?, isTrans: Bool?, name: String?, rgb: String?
    ) {
        self.externalIds = externalIds
        self.id = id
        self.isTrans = isTrans
        self.name = name
        self.rgb = rgb
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case externalIds = "external_ids"
        case id
        case isTrans = "is_trans"
        case name
        case rgb
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(externalIds, forKey: .externalIds)
        try container.encode(id, forKey: .id)
        try container.encode(isTrans, forKey: .isTrans)
        try container.encode(name, forKey: .name)
        try container.encode(rgb, forKey: .rgb)
    }
}

@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension Color: Identifiable {}
