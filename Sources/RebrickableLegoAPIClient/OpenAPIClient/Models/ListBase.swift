//
// ListBase.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct ListBase: Sendable, Codable, ParameterConvertible, Hashable {
    public var count: Int
    public var next: String?
    public var previous: String?

    public init(count: Int, next: String? = nil, previous: String? = nil) {
        self.count = count
        self.next = next
        self.previous = previous
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case count
        case next
        case previous
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(count, forKey: .count)
        try container.encodeIfPresent(next, forKey: .next)
        try container.encodeIfPresent(previous, forKey: .previous)
    }
}
